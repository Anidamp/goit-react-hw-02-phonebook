{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","addNewContact","reset","this","className","s","form","onSubmit","input","onChange","type","pattern","title","required","button","Component","ContactList","contacts","handleDelContact","list","map","item","btn","onClick","Filter","filter","App","obj","some","alert","contactId","prevState","onChangeFilter","target","getFilteredContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e0900b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1h-5c\",\"button\":\"ContactForm_button__1g5BX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2oVta\",\"item\":\"ContactsList_item__UwP8t\",\"btn\":\"ContactsList_btn__PyQDv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__39R7k\"};","import { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      name,\r\n      number,\r\n      id: uuidv4(),\r\n    };\r\n    this.setState({ contact });\r\n    this.props.addNewContact(contact);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ \r\n    name: '',\r\n    number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, handleChange } = this;\r\n    return (\r\n      <div>\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              onChange={handleChange}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import s from './ContactsList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactList ({ contacts, handleDelContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({id, name, number,}) =>\r\n        <li key={id} className={s.item}>\r\n          <p>{name}</p>\r\n          <p>{number}</p>\r\n          <button  className={s.btn} type='button' onClick={() => handleDelContact(id)}>X</button>\r\n        </li>)}\r\n    </ul>\r\n  )\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  handleDelContact: PropTypes.func.isRequired,\r\n};\r\n","import s from './Filter.module.css';\r\n\r\nexport default function Filter({ filter, onChange }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name:\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}","import './App.css';\r\nimport { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactsList from './components/ContactsList/ContactsList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  addNewContact =obj => {\r\n    const { contacts } = this.state;\r\n    const { name } =obj;\r\n    if (contacts.some(({ name }) => name ===obj.name)) {\r\n      alert(`Sorry, ${name} is already in contacts list`);\r\n      return;\r\n    }\r\n    this.setState(({ contacts }) => {\r\n      return {\r\n        contacts: [...contacts, obj],\r\n      };\r\n    });\r\n  };\r\n\r\n  handleDelContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  onChangeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n  render() {\r\n    const { filter } = this.state;\r\n    const { handleDelContact, addNewContact, onChangeFilter } = this;\r\n    const visibleContacts = this.getFilteredContacts();\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Phonebook</h2>\r\n        <ContactForm addNewContact={addNewContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChange={onChangeFilter} />\r\n        <ContactsList contacts={visibleContacts} handleDelContact={handleDelContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}